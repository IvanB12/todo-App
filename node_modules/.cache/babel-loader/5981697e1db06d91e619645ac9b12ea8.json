{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\IdeaPad520\\\\todo2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\IdeaPad520\\\\todo2\\\\src\\\\components\\\\todo-list\\\\todo-list.js\";\n// eslint-disable-next-line\nimport React from 'react';\nimport TodoListItem from '../todo-list-item/';\nimport './todo-list.css';\n\nconst ToDoList = ({\n  todos,\n  onDeleted,\n  onToggleImportant,\n  onToggleDone\n}) => {\n  // передаем свойство из App\n  const elements = todos.map(item => {\n    const id = item.id,\n          itemProps = _objectWithoutProperties(item, [\"id\"]); // мы группируем все элементы\n    // вместе, создавая новые объект, которые включает в себя только\n    // нужные нам свойства\n\n\n    return (// создаем константу, раскладывающую массив на элементы, \n      // каждый из них является  свойством создающим отдельный\n      // для отдельного элемента спискаTodoListItem\n      React.createElement(\"li\", {\n        key: id,\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(TodoListItem, Object.assign({}, itemProps, {\n        onDeleted: () => onDeleted(id),\n        onToggleImportant: () => onToggleImportant(id),\n        onToggleDone: () => onToggleImportant(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      })))\n    );\n  });\n  return React.createElement(\"ul\", {\n    className: \"list-group todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, elements); // сдесь мы просто передаем эту константу в качестве того,\n  // что будет отобраться для отдельных пунктов списка\n  // label -свойство компонента props.\n  // important - булеан, который тоже свойство компонента props.\n  // эти свойства используются в другом компоненте, для прописывания \n  // признаков отдельного item в списке todo\n};\n\nexport default ToDoList;","map":{"version":3,"sources":["C:\\Users\\IdeaPad520\\todo2\\src\\components\\todo-list\\todo-list.js"],"names":["React","TodoListItem","ToDoList","todos","onDeleted","onToggleImportant","onToggleDone","elements","map","item","id","itemProps"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAO,iBAAP;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA,iBAApB;AAAuCC,EAAAA;AAAvC,CAAD,KAA2D;AAAC;AACzE,QAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AAAA,UACzBC,EADyB,GACJD,IADI,CACzBC,EADyB;AAAA,UAClBC,SADkB,4BACJF,IADI,WACC;AAClC;AACA;;;AACA,WAAQ;AACJ;AACA;AACA;AAAI,QAAA,GAAG,EAAEC,EAAT;AAAa,QAAA,SAAS,EAAC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD,oBAAiBC,SAAjB;AACA,QAAA,SAAS,EAAE,MAAIP,SAAS,CAACM,EAAD,CADxB;AAEA,QAAA,iBAAiB,EAAE,MAAIL,iBAAiB,CAACK,EAAD,CAFxC;AAGA,QAAA,YAAY,EAAE,MAAIL,iBAAiB,CAACK,EAAD,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAHJ;AAUH,GAdgB,CAAjB;AAeA,SACA;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QADL,CADA,CAhBwE,CAoBxE;AACA;AACA;AACA;AACA;AACA;AACH,CA1BD;;AA2BA,eAAeL,QAAf","sourcesContent":["// eslint-disable-next-line\r\nimport React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item/'\r\nimport './todo-list.css'\r\n\r\n\r\n\r\nconst ToDoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {// передаем свойство из App\r\n    const elements = todos.map((item) => {\r\n        const { id, ...itemProps } = item;// мы группируем все элементы\r\n        // вместе, создавая новые объект, которые включает в себя только\r\n        // нужные нам свойства\r\n        return (// создаем константу, раскладывающую массив на элементы, \r\n            // каждый из них является  свойством создающим отдельный\r\n            // для отдельного элемента спискаTodoListItem\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem{...itemProps}\r\n                onDeleted={()=>onDeleted(id)}\r\n                onToggleImportant={()=>onToggleImportant(id)}\r\n                onToggleDone={()=>onToggleImportant(id)} />\r\n            </li>\r\n        );\r\n    });\r\n    return (\r\n    <ul className=\"list-group todo-list\">\r\n        {elements}\r\n    </ul>)\r\n    // сдесь мы просто передаем эту константу в качестве того,\r\n    // что будет отобраться для отдельных пунктов списка\r\n    // label -свойство компонента props.\r\n    // important - булеан, который тоже свойство компонента props.\r\n    // эти свойства используются в другом компоненте, для прописывания \r\n    // признаков отдельного item в списке todo\r\n}\r\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}