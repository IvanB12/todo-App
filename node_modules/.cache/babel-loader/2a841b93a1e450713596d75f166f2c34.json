{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IdeaPad520\\\\todo2\\\\src\\\\components\\\\todo-list-item\\\\todo-list-item.js\";\nimport React, { Component } from 'react';\nimport './todo-list-item.css';\nexport default class TodoListItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      done: false,\n      important: false\n    };\n\n    this.onLabelClick = () => {\n      // этот синтаксис позволяет менять текущее состояние компонента на противоположное\n      this.setState(({\n        done\n      }) => {\n        return {\n          done: !done\n        };\n      });\n    };\n\n    this.onMarkImportant = () => {\n      this.setState(({\n        important\n      }) => {\n        return {\n          important: !important\n        };\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          label = _this$props.label,\n          onDeleted = _this$props.onDeleted,\n          onToggleImportant = _this$props.onToggleImportant,\n          onToggleDone = _this$props.onToggleDone; // instead of label \n    //could be props\n\n    const _this$state = this.state,\n          done = _this$state.done,\n          important = _this$state.important;\n    let classNames = 'todo-list-item';\n\n    if (done) {\n      classNames += ' done';\n    }\n\n    if (important) {\n      classNames += ' important';\n    }\n\n    const listStyle = {\n      color: important ? 'steelblue' : 'black',\n      fontWeight: important ? 'bold' : 'normal'\n    };\n    return (// для каждого элемента прикреплена функция onClick, \n      //меняющая состояние на противоположное она внутри каждого элемента(в теге) \n      React.createElement(\"span\", {\n        className: classNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"todo-list-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"todo-list-item-label\",\n        style: listStyle,\n        onClick: onToggleDone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, label), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success btn-sm float-right\",\n        onClick: onToggleImportant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-exclamation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-danger btn-sm float-right\",\n        onClick: onDeleted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-trash-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))))\n    ); // instead of that coulld be props.label\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\IdeaPad520\\todo2\\src\\components\\todo-list-item\\todo-list-item.js"],"names":["React","Component","TodoListItem","state","done","important","onLabelClick","setState","onMarkImportant","render","props","label","onDeleted","onToggleImportant","onToggleDone","classNames","listStyle","color","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sBAAP;AACA,eAAe,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAChDE,KADgD,GACxC;AACJC,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,SAAS,EAAE;AAFP,KADwC;;AAAA,SAMhDC,YANgD,GAMjC,MAAM;AAAC;AAClB,WAAKC,QAAL,CAAc,CAAC;AAAEH,QAAAA;AAAF,OAAD,KAAc;AACxB,eAAO;AACHA,UAAAA,IAAI,EAAE,CAACA;AADJ,SAAP;AAGH,OAJD;AAKH,KAZ+C;;AAAA,SAchDI,eAdgD,GAc9B,MAAM;AACpB,WAAKD,QAAL,CAAc,CAAC;AAAEF,QAAAA;AAAF,OAAD,KAAmB;AAC7B,eAAO;AACHA,UAAAA,SAAS,EAAE,CAACA;AADT,SAAP;AAGH,OAJD;AAKH,KApB+C;AAAA;;AAuBhDI,EAAAA,MAAM,GAAG;AAAA,wBAEmC,KAAKC,KAFxC;AAAA,UACGC,KADH,eACGA,KADH;AAAA,UACUC,SADV,eACUA,SADV;AAAA,UAEDC,iBAFC,eAEDA,iBAFC;AAAA,UAEkBC,YAFlB,eAEkBA,YAFlB,EAGL;AACA;;AAJK,wBAKuB,KAAKX,KAL5B;AAAA,UAKGC,IALH,eAKGA,IALH;AAAA,UAKSC,SALT,eAKSA,SALT;AAOL,QAAIU,UAAU,GAAG,gBAAjB;;AACA,QAAIX,IAAJ,EAAU;AACNW,MAAAA,UAAU,IAAI,OAAd;AACH;;AACD,QAAIV,SAAJ,EAAe;AACXU,MAAAA,UAAU,IAAI,YAAd;AACH;;AAED,UAAMC,SAAS,GAAG;AACdC,MAAAA,KAAK,EAAEZ,SAAS,GAAG,WAAH,GAAiB,OADnB;AAEda,MAAAA,UAAU,EAAEb,SAAS,GAAG,MAAH,GAAY;AAFnB,KAAlB;AAKA,WAAQ;AACJ;AACA;AAAM,QAAA,SAAS,EAAEU,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,sBADd;AAEI,QAAA,KAAK,EAAEC,SAFX;AAGI,QAAA,OAAO,EAAEF,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIKH,KAJL,CADJ,EAOI;AAAQ,QAAA,IAAI,EAAC,QAAb;AACI,QAAA,SAAS,EAAC,4CADd;AAEI,QAAA,OAAO,EAAEE,iBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAPJ,EAYI;AAAQ,QAAA,IAAI,EAAC,QAAb;AACI,QAAA,SAAS,EAAC,2CADd;AAEI,QAAA,OAAO,EAAED,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAZJ,CADJ;AAFJ,MApBK,CA0CQ;AAChB;;AAlE+C","sourcesContent":["import React, { Component } from 'react';\r\nimport './todo-list-item.css'\r\nexport default class TodoListItem extends Component {\r\n    state = {\r\n        done: false,\r\n        important: false\r\n\r\n    };\r\n    onLabelClick = () => {// этот синтаксис позволяет менять текущее состояние компонента на противоположное\r\n        this.setState(({ done }) => {\r\n            return {\r\n                done: !done\r\n            };\r\n        });\r\n    };\r\n\r\n    onMarkImportant = () => {\r\n        this.setState(({ important }) => {\r\n            return {\r\n                important: !important\r\n            };\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { label, onDeleted,\r\n            onToggleImportant, onToggleDone } = this.props\r\n        // instead of label \r\n        //could be props\r\n        const { done, important } = this.state;\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        const listStyle = {\r\n            color: important ? 'steelblue' : 'black',\r\n            fontWeight: important ? 'bold' : 'normal'\r\n        };\r\n\r\n        return (// для каждого элемента прикреплена функция onClick, \r\n            //меняющая состояние на противоположное она внутри каждого элемента(в теге) \r\n            <span className={classNames}>\r\n                <span className='todo-list-item'>\r\n                    <span\r\n                        className='todo-list-item-label'\r\n                        style={listStyle}\r\n                        onClick={onToggleDone}>\r\n                        {label}\r\n                    </span>\r\n                    <button type='button'\r\n                        className='btn btn-outline-success btn-sm float-right'\r\n                        onClick={onToggleImportant}>\r\n                        <i className='fa fa-exclamation' />\r\n                    </button>\r\n                    <button type='button'\r\n                        className='btn btn-outline-danger btn-sm float-right'\r\n                        onClick={onDeleted}>\r\n                        <i className=\"fa fa-trash-o\" />\r\n\r\n                    </button>\r\n                </span>\r\n            </span>);// instead of that coulld be props.label\r\n    };// but because of destructurization syntax we can use already properties\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}