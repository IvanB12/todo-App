{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\IdeaPad520\\\\todo2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\IdeaPad520\\\\todo2\\\\src\\\\components\\\\app\\\\app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport AppHeader from '../app-header/';\nimport ToDoList from '../todo-list/';\nimport SearchPanel from '../search-panel/';\nimport ItemStatusFilter from '../item-status-filter/';\nimport AddComponent from '../add-component';\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTododItem('Grocery!'), this.createTododItem('Visit grandma!!!'), this.createTododItem('Make a laundry')],\n      term: \"\",\n      filter: '' // active, all, done\n\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onItemAdded = text => {\n      const newItem = this.createTododItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData, newItem];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'important')\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'done')\n        };\n      });\n    };\n\n    this.onSearchChange = term => {\n      this.setState({\n        term\n      });\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  createTododItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id); //1) updating an object\n\n    const oldItem = arr[idx];\n\n    const newItem = _objectSpread({}, oldItem, {\n      [propName]: !oldItem[propName]\n    }); //2) creating new object\n\n\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  /////mistake below\n  search(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => {\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n    });\n  }\n\n  filter(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n\n      case 'active':\n        return items.filter(item => !item.done);\n\n      case 'done':\n        return items.filter(item => item.done);\n\n      default:\n        return items;\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          todoData = _this$state.todoData,\n          term = _this$state.term,\n          filter = _this$state.filter;\n    const visibleItems = this.filter(this.search(todoData, term), filter);\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount;\n    return React.createElement(\"div\", {\n      className: \"todo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      todo: todoCount,\n      done: doneCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(SearchPanel, {\n      onSearchChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      filter: filter,\n      onFilterChange: this.onFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(ToDoList, {\n      todos: visibleItems,\n      onDeleted: this.deleteItem,\n      onToggleImportant: this.onToggleImportant,\n      onToggleDone: this.onToggleDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(AddComponent, {\n      onItemAdded: this.onItemAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })); // сдесь мы указываем источник для свойства todos\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\IdeaPad520\\todo2\\src\\components\\app\\app.js"],"names":["React","Component","AppHeader","ToDoList","SearchPanel","ItemStatusFilter","AddComponent","App","maxId","state","todoData","createTododItem","term","filter","deleteItem","id","setState","idx","findIndex","el","newArray","slice","onItemAdded","text","newItem","newArr","onToggleImportant","toggleProperty","onToggleDone","onSearchChange","onFilterChange","label","important","done","arr","propName","oldItem","search","items","length","item","toLowerCase","indexOf","render","visibleItems","doneCount","todoCount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AppHeader from '../app-header/'\r\nimport ToDoList from '../todo-list/'\r\nimport SearchPanel from '../search-panel/'\r\nimport ItemStatusFilter from '../item-status-filter/'\r\nimport AddComponent from '../add-component'\r\nimport './app.css';\r\nexport default class App extends Component {\r\n    maxId = 100;\r\n    state = {\r\n        todoData: [\r\n            this.createTododItem('Grocery!'),\r\n            this.createTododItem('Visit grandma!!!'),\r\n            this.createTododItem('Make a laundry')\r\n        ],\r\n        term: \"\",\r\n        filter: ''// active, all, done\r\n    };\r\n    createTododItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            const newArray = [...todoData.slice(0, idx),\r\n            ...todoData.slice(idx + 1)\r\n            ];\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    }\r\n    //ajax/fetch\r\n    onItemAdded = (text) => {\r\n        const newItem = this.createTododItem(text);\r\n        this.setState(({ todoData }) => {\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ]\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n        //1) updating an object\r\n        const oldItem = arr[idx];\r\n        const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n        //2) creating new object\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ]\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n\r\n        })\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        })\r\n    };\r\n    onSearchChange = (term) => {\r\n        this.setState({ term })\r\n    }\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter })\r\n    }\r\n\r\n    /////mistake below\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        })\r\n    }\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { todoData, term, filter } = this.state;\r\n\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n        return (<div className='todo-app' >\r\n\r\n            <AppHeader todo={todoCount} done={doneCount} />\r\n            <div className='top-panel d-flex'>\r\n                <SearchPanel\r\n                    onSearchChange={this.onSearchChange} />\r\n                <ItemStatusFilter\r\n                    filter={filter}\r\n                    onFilterChange={this.onFilterChange} />\r\n            </div>\r\n            <ToDoList\r\n                todos={visibleItems}\r\n                onDeleted={this.deleteItem}\r\n                onToggleImportant={this.onToggleImportant}\r\n                onToggleDone={this.onToggleDone} />\r\n            <AddComponent onItemAdded={this.onItemAdded} />\r\n\r\n        </div>)// сдесь мы указываем источник для свойства todos\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}